@model UniPath_MVC.Models.ViewModels.CapsuleViewModel

@{
    Layout = null;
    var studentId = Context.Session.GetInt32("UserId");

    bool isCompleted = Model.IsCompleted;
    Console.WriteLine($"Has the student completed the capsule? {isCompleted}");
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@Model.Capsule.Title</title>
    <link rel="icon" type="image/x-icon" href="~/favicon.png" />

    <link rel="stylesheet" href="~/css/capsule.css" asp-append-version="true">
    <link rel="stylesheet" href="~/css/styles.css" asp-append-version="true">
</head>
<body>
    <div class="container">
        <div class="video-section">
            <div class="video">
                <iframe width="560" height="315" src="https://www.youtube.com/embed/bw-NvGvLHtM?si=kfbHkX07Qa-EH_3q"
                        title="YouTube video player" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen>
                </iframe>
            </div>
            <div class="details">
                <p>@Model.Capsule.Content</p>
                @if (isCompleted)
                {
                    <div id="completion-message">
                        <h2>🎉 You have completed this capsule! 🎉</h2>
                        <p>Congratulations! You can now proceed to the next capsule.</p>
                        <button id="retake-quiz" class="button red">🔄 Retake Quiz</button>
                    </div>
                }
                else
                {
                    @if (Model.TrueFalseQuestions.Any())
                    {
                        <div class="capsule-quiz-container" id="quiz-section">
                            <h2>Capsule Quiz</h2>
                            <form id="quiz-form">
                                <input type="hidden" id="capsuleId" value="@Model.Capsule.Id">
                                @Html.AntiForgeryToken()

                                @foreach (var tfq in Model.TrueFalseQuestions)
                                {
                                    <div class="capsule-question" data-question-id="@tfq.Id" data-correct-answer="@tfq.CorrectAnswer.ToString().ToLower()">
                                        <span>@tfq.Question</span>
                                        <div class="capsule-question-buttons">
                                            <label>
                                                <input type="radio" name="question-@tfq.Id" value="true"> True
                                            </label>
                                            <label>
                                                <input type="radio" name="question-@tfq.Id" value="false"> False
                                            </label>
                                        </div>
                                        <p class="feedback-message"></p>
                                    </div>
                                }

                                <button type="button" id="check-quiz" class="submit-quiz-button">Check Answers</button>
                            </form>

                            <div id="quiz-result"></div>
                        </div>
                    }
                }

            </div>
        </div>
    </div>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const checkQuizButton = document.getElementById("check-quiz");
            const retakeQuizButton = document.getElementById("retake-quiz");
            const csrfToken = document.querySelector('input[name="__RequestVerificationToken"]')?.value;

            if (checkQuizButton) {
                checkQuizButton.addEventListener("click", function () {
                    let allCorrect = true;
                    let userAnswers = {};
                    const questions = document.querySelectorAll(".capsule-question");
                    const capsuleIdElement = document.getElementById("capsuleId");

                    if (!capsuleIdElement) {
                        console.error("Error: Cannot find capsule ID");
                        alert("Error: System cannot identify the current capsule. Please refresh the page.");
                        return;
                    }

                    const capsuleId = capsuleIdElement.value;

                    questions.forEach(question => {
                        const questionId = question.getAttribute("data-question-id");
                        const correctAnswer = question.getAttribute("data-correct-answer");
                        const selectedAnswer = document.querySelector(`input[name="question-${questionId}"]:checked`);
                        const feedbackMessage = question.querySelector(".feedback-message");

                        if (!feedbackMessage) {
                            console.error(`Feedback message element not found for question ${questionId}`);
                            return;
                        }

                        if (selectedAnswer) {
                            const isCorrect = selectedAnswer.value === correctAnswer;
                            userAnswers[questionId] = isCorrect;

                            feedbackMessage.innerHTML = isCorrect ?
                                "✔ Correct!" :
                                "❌ Wrong! Try again.";
                            feedbackMessage.style.color = isCorrect ? "green" : "red";

                            if (!isCorrect) allCorrect = false;
                        } else {
                            feedbackMessage.innerHTML = "⚠ Please select an answer!";
                            feedbackMessage.style.color = "orange";
                            allCorrect = false;
                        }
                    });

                    const quizResult = document.getElementById("quiz-result");
                    if (!quizResult) {
                        console.error("Quiz result element not found");
                        return;
                    }

                    if (allCorrect) {
                        quizResult.innerHTML = "<p style='color: green; font-weight: bold;'>🎉 Congratulations! All answers are correct! Capsule marked as completed.</p>";
                        updateCapsuleStatus();
                        markCapsuleComplete(capsuleId, csrfToken);
                    } else {
                        quizResult.innerHTML = "<p style='color: red; font-weight: bold;'>❌ Some answers are incorrect. Try again!</p>";
                    }
                });
            } else {
                console.log("No quiz found on this page");
            }

            if (retakeQuizButton) {
                retakeQuizButton.addEventListener("click", function() {
                    window.location.reload();
                });
            }

            function updateCapsuleStatus() {
                let capsuleStatus = document.getElementById("capsule-status");
                const detailsSection = document.querySelector(".details");

                if (!detailsSection) {
                    console.error("Details section not found");
                    return;
                }

                if (!capsuleStatus) {
                    capsuleStatus = document.createElement("p");
                    capsuleStatus.id = "capsule-status";
                    capsuleStatus.className = "capsule-status";
                    capsuleStatus.style.fontSize = "1.2rem";
                    capsuleStatus.style.fontWeight = "bold";
                    detailsSection.appendChild(capsuleStatus);
                }

                capsuleStatus.innerText = "✅ Completed";
                capsuleStatus.style.color = "green";
            }

            function markCapsuleComplete(capsuleId, token) {
                if (!token) {
                    console.error("CSRF token not found");
                    alert("Security token missing. Please refresh the page and try again.");
                    return;
                }

                fetch("/Capsule/MarkStudentComplete", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "X-CSRF-TOKEN": token
                    },
                    body: JSON.stringify({ capsuleId: capsuleId })
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (!data.success) {
                            throw new Error(data.message || 'Server indicated failure');
                        }

                        updateCapsuleStatus();

                        const quizResult = document.getElementById("quiz-result");
                        if (quizResult) {
                            quizResult.innerHTML = "<p style='color: green; font-weight: bold;'>🎉 Capsule marked as complete successfully!</p>";
                        }

                        
                    })
                    .catch(error => {
                        console.error("Error marking capsule as complete:", error);

                        const quizResult = document.getElementById("quiz-result");
                        if (quizResult) {
                            quizResult.innerHTML = `<p style='color: red; font-weight: bold;'>❌ Error: ${error.message}</p>`;
                        }

                        alert(`Error saving progress: ${error.message}. Please try again.`);
                    });
            }
        });
    </script>
</body>
</html>